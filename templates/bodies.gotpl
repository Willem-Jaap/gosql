// Generated by gosql: DO NOT EDIT.
package {{ .PackageName}}

import (
	"github.com/gin-gonic/gin"

	{{ range $v := .Imports }}
    "{{ . }}"
	{{- end }}
)

{{ range $controller := .Controllers }}
	type {{ .CamelName }}CreateBody struct {
		{{ range $column := .CreateColumns }}
			{{ .CamelName }} {{ if isNullableForInput . }}*{{- end}}{{ .Type.GoTypeName }} `json:"{{ .SnakeName }}"{{ getValidate .}}`
		{{- end }}
	}
	
	type {{ .CamelName }}UpdateBody struct {
		{{ range $column := .UpdateColumns }}
			{{ .CamelName }} *{{ .Type.GoTypeName }} `json:"{{  .SnakeName }}"{{ getValidate .}}`
		{{- end }}
	}

	func parse{{ .CamelName }}CreateBody(context *gin.Context) (*{{ .CamelName }}CreateBody, error) {
		var body {{ .CamelName }}CreateBody
		if err := bindAndValidateJSON(context, &body); err != nil {
			return nil, err
		}

		return &body, nil
	}

	func {{firstToLower .CamelName}}CreateBodyToSqlBoiler(body *{{ .CamelName }}CreateBody) *dm.{{ .CamelName }} {
		model := dm.{{ .CamelName }}{
			{{- range $column := .CreateColumns }}
				{{- if isNullableForInput .}}
				{{- else}}
					{{ .CamelName }}: body.{{ .CamelName }},
				{{- end}}
			{{- end }}
		}

		{{ range $column := .UpdateColumns }}
		{{- if isNullableForInput .}}
			if body.{{ .CamelName }} != nil {
			{{- if isNullableDBType .}}
				model.{{ .CamelName }} = null.{{ firstToUpper .Type.GoTypeName}}From(*body.{{ .CamelName }})
			{{- else }}
				model.{{ .CamelName }} = *body.{{ .CamelName }}
			{{- end}}
			}
		{{- end}}
		{{- end }}
		return &model
	}

	func parse{{ .CamelName }}UpdateBody(context *gin.Context) (*{{ .CamelName }}UpdateBody, error) {
		var body {{ .CamelName }}UpdateBody
		if err := bindAndValidateJSON(context, &body); err != nil {
			return nil, err
		}

		return &body, nil
	}

	func {{ firstToLower .CamelName}}UpdateBodyToSqlBoiler(body *{{ .CamelName }}UpdateBody, oldModel *dm.{{ .CamelName }}) *dm.{{ .CamelName }} {
		{{- range $column := .UpdateColumns }}
			if body.{{ .CamelName }} != nil {
				{{- if isNullableDBType .}}
					oldModel.{{ .CamelName }} = null.{{ firstToUpper .Type.GoTypeName}}From(*body.{{ .CamelName }})
				{{- else }}
					oldModel.{{ .CamelName }} = *body.{{ .CamelName }}
				{{- end}}
			}
		{{- end }}
		return oldModel
	}


{{ end }}