// Generated by gosql: DO NOT EDIT.
package {{ .PackageName }}

import (
	"encoding/json"

	"github.com/volatiletech/sqlboiler/v4/queries/qm"
)

{{ range $controller := .Controllers }}

	type {{ .CamelName }}OrderColumns struct {
		{{ range $column := .Columns }}
			{{ .CamelName }} *string `json:"{{  .SnakeName }}"`	
		{{- end }}
	}

	func parse{{ .CamelName }}Orders(relations string) (*{{ .CamelName }}OrderColumns, error) {
		var value {{ .CamelName }}OrderColumns
		if err := json.Unmarshal([]byte(relations), &value); err != nil {
			return nil, err
		}

		return &value, nil
	}

	func parse{{ .CamelName}}OrdersToMods(columns *{{ .CamelName}}OrderColumns) ([]qm.QueryMod, error) {
		var queryMods []qm.QueryMod

		{{ range $column := .Columns }}
			if columns.{{ .CamelName }} != nil {
				if *columns.{{ .CamelName }} == "asc" {
					queryMods = append(queryMods, qm.OrderBy("{{ .SnakeName }} ASC"))
				} 
				if *columns.{{ .CamelName }} == "desc" {
					queryMods = append(queryMods, qm.OrderBy("{{ .SnakeName }} DESC"))
				}
			}
		{{- end }}

		return queryMods, nil
	}
{{ end }}
