// Generated by gosql: DO NOT EDIT.
package {{ .PackageName}}

import (
	"net/http"
	"strings"

	"github.com/gin-gonic/gin"
)

func AuthMiddleware(extraAuthMiddleware func (gin *gin.Context)) gin.HandlerFunc {
	return func(c *gin.Context) {
		var tokenString string
		var err error

		tokenString, err = c.Cookie("Authorization")
		if err != nil && err != http.ErrNoCookie {
			c.AbortWithStatusJSON(401, ResponseWithPayload(nil, "unauthenticated", "You are unauthenticated", false, nil))
			return
		}

		if err != nil && err == http.ErrNoCookie {
			headerValue := c.GetHeader("Authorization")
			if !strings.Contains(headerValue, "Bearer") {
				c.AbortWithStatusJSON(403, ResponseWithPayload(nil, "unauthenticated", "You are unauthenticated", false, nil))
				return
			}
			headerValueSplitted := strings.Split(headerValue, "Bearer ")
			tokenString = headerValueSplitted[1]
			if tokenString == "" {
				c.AbortWithStatusJSON(403, ResponseWithPayload(nil, "unauthenticated", "You are unauthenticated", false, nil))
				c.Abort()
				return
			}
		}

		value, err := ValidateToken(tokenString)
		if err != nil {
			c.AbortWithStatusJSON(403, ResponseWithPayload(nil, "unauthenticated", "You are unauthenticated", false, nil))
			return
		}

        {{ range $jwt := .JWTFields }}
            c.Set("{{ .SnakeName }}", value.{{ .CamelName }})
        {{- end }}

		if extraAuthMiddleware != nil {
			extraAuthMiddleware(c)
		}

		c.Next()
	}
}
