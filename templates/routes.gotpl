// Generated by gosql: DO NOT EDIT.
package {{ .PackageName}}

import (
    "database/sql"
    "os"
    "time"

	"github.com/gin-gonic/gin"
    "github.com/gin-contrib/cors"
)

type ApiConfig struct {
    AllowOrigins []string
}

func RunApi(db *sql.DB, c *ApiConfig) {
    controllers := newClient(db)
    defer db.Close()

    if os.Getenv("GIN_MODE") == "release" {
		gin.SetMode(gin.ReleaseMode)
	}

    router := gin.Default()
	router.Use(cors.New(cors.Config{
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Length", "Content-Type", "Authorization", "Access-Control-Allow-Credentials", "cookie"},
		AllowOrigins:     c.AllowOrigins,
		MaxAge:           12 * time.Hour,
		AllowCredentials: true,
	}))

{{ range $controller := .Controllers }}
    {{ firstToLower .CamelName }} := router.Group("/{{ .SnakeName }}")
    {{ firstToLower .CamelName }}.GET("", controllers.{{ .CamelName}}.List)
{{ end }}

    panic(router.Run())
}