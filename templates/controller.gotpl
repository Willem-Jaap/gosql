// Generated by gosql: DO NOT EDIT.
package {{ .PackageName}}

import (
	"context"
	"http"
	"database/sql"

	"github.com/gin-gonic/gin"

{{ range $v := .Imports }}
    "{{ . }}"
{{- end }}
)

type {{ .CamelName }}Controller struct {
	*Client
}


func (c *{{ .CamelName}}Controller) List(ctx *gin.Context) {
	queryMods, err := Parse{{ .CamelName }}ListQueryToMods(ctx)
	if err != nil {
		ctx.AbortWithStatusJSON(http.StatusBadRequest, responseWithPayload(nil, "invalid_request", "Invalid request", false))
		return
	}

	payload, err := dm.{{pluralize .CamelName}}( queryMods...).All(ctx, c.db)
	if err != nil {
		ctx.AbortWithStatusJSON(http.StatusBadRequest, responseWithPayload(nil, "generic", "Something went wrong", false))
		return
	}

	ctx.JSON(http.StatusOK, responseWithPayload(am.SqlBoiler{{ pluralize .CamelName }}ToApi{{ pluralize .CamelName }}(payload), nil, nil, true))
}