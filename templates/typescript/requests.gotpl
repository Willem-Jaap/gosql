// Generated by gosql: DO NOT EDIT.

export function customFetch<T>(
  params: CustomFetchOptions
): Promise<Response<T>> {
  return new Promise((resolve, reject) => {
    fetch(params.url, {
      method: params.method,
      headers: params.headers,
      body: JSON.stringify(params.body),
      credentials: "include",
      cache: "default",
    })
      .then((response) => {
        if (response.ok) {
          response
            .json()
            .then((data) => {
              resolve(data);
            })
            .catch((error) => {
              reject(error);
            });
        }
        throw response;
      })
      .catch((error) => {
        reject(error);
      });
  });
}

export interface Response<T> {
	payload: T,
	error: string,
	message: string,
	ok: boolean,
}

export interface CustomFetchOptions {
    url: string,
    method:  "GET" | "POST" | "PUT" | "DELETE" | "PATCH",
    headers: Record<string, string>,
    body: any,
}
